{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This tutorial is about\n",
    "- Global constants in quantax\n",
    "- Define Symmetry\n",
    "- Define Ising Hamiltonian\n",
    "- Exact diagonalization\n",
    "- Define RBM neural quantum state\n",
    "- Exact reconfiguration\n",
    "- Stochastic reconfiguration (TDVP)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import jax.numpy as jnp\n",
    "import quantax as qtx\n",
    "\n",
    "# ======================= Global constants in quantax =======================\n",
    "# random seed, default to 0\n",
    "qtx.set_random_seed(2347)\n",
    "\n",
    "# default data types for computations outside variational ansatz, default to float64\n",
    "qtx.set_default_dtype(jnp.float64)\n",
    "\n",
    "# lattice of quantum systems, MUST be given in the beginning of the program\n",
    "# lattice is treated as a GLOBAL CONSTANT implicitly passed to other quantities\n",
    "# DON'T define different lattices in a single run\n",
    "lattice = qtx.sites.Chain(12) # default to periodic boundaries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Ising hamiltonian with transverse field h=1\n",
    "H = qtx.operator.Ising(h=1)\n",
    "\n",
    "# an alternative way to define the Ising hamiltonian\n",
    "\n",
    "from quantax.operator import sigma_z, sigma_x\n",
    "\n",
    "L = lattice.N\n",
    "h = 1\n",
    "# periodic boundary is assumed\n",
    "H = -sum(sigma_z(i) * sigma_z(i+1) for i in range(L))\n",
    "H -= sum(h * sigma_x(i) for i in range(L))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/chenao/quantax_env/lib/python3.12/site-packages/quantax/symmetry/symmetry.py:268: GeneralBasisWarning: using non-commuting symmetries can lead to unwanted behaviour of general basis, make sure that quantum numbers are invariant under non-commuting symmetries!\n",
      "  basis = spin_basis_general(self.N, Nup, pauli=0, make_basis=False, **blocks)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[-15.32259515 -14.27838561 -12.26112769]\n"
     ]
    }
   ],
   "source": [
    "from quantax.symmetry import Trans1D, SpinInverse, Flip\n",
    "\n",
    "# combination of symmetries can be done by a summation\n",
    "symm = Trans1D() + SpinInverse() + Flip()\n",
    "\n",
    "# diagonalize H in the given symmetry sector and obtain the 3 lowest eigenstates\n",
    "E, wave_function = H.diagonalize(symm=symm, k=3)\n",
    "print(E)\n",
    "\n",
    "# construct a dense state given the ground state wave function\n",
    "dense = qtx.state.DenseState(wave_function[:, 0], symm=symm)\n",
    "\n",
    "# compute <dense|H|dense>, verify the ground state energy\n",
    "energy = dense @ H @ dense\n",
    "assert np.isclose(energy, E[0])\n",
    "\n",
    "# `GeneralBasisWarning` is because Trans1D and Flip don't commute with each other."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# RBM wave function with alpha=4\n",
    "model = qtx.model.RBM_Dense(features=4*L)\n",
    "\n",
    "# define the variational state with given symmetry projection\n",
    "state = qtx.state.Variational(model=model, symm=symm)\n",
    "\n",
    "# define exact reconfiguration optimizer\n",
    "# this is only for tests in small systems where the full wave function can be obtained\n",
    "optimizer = qtx.optimizer.ER(state, H, symm=symm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# a data tracer for recording the energy\n",
    "energy_data = qtx.utils.DataTracer()\n",
    "\n",
    "# optimization iterations\n",
    "for i in range(100):\n",
    "    step = optimizer.get_step()\n",
    "    state.update(step * 1e-2) # step size 1e-2\n",
    "    energy_data.append(optimizer.energy)\n",
    "\n",
    "energy_data.plot(baseline=E[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-15.222630290052567\n"
     ]
    }
   ],
   "source": [
    "# variational energies can also be computed exactly in small systems\n",
    "\n",
    "state_dense = state.todense(symm).normalize()\n",
    "# E = <psi|H|psi>\n",
    "variational_energy = state_dense @ H @ state_dense\n",
    "print(variational_energy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "E0715 00:15:17.700038  119293 hlo_lexer.cc:444] Failed to parse int literal: 073633466920384733389\n",
      "E0715 00:15:17.700064  119293 hlo_lexer.cc:444] Failed to parse int literal: 073633466920384733389\n"
     ]
    }
   ],
   "source": [
    "# define a new variational state\n",
    "model = qtx.model.RBM_Dense(features=4*L)\n",
    "state = qtx.state.Variational(model=model, symm=symm)\n",
    "\n",
    "# sampler with local flip updates\n",
    "sampler = qtx.sampler.LocalFlip(state, nsamples=1000)\n",
    "\n",
    "# stochastic reconfiguration optimizer, which can work in most cases\n",
    "optimizer = qtx.optimizer.SR(state, H)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "energy_data = qtx.utils.DataTracer()\n",
    "\n",
    "# optimization iterations, now requires sampling\n",
    "for i in range(100):\n",
    "    samples = sampler.sweep()\n",
    "    step = optimizer.get_step(samples)\n",
    "    state.update(step * 1e-2)\n",
    "    energy_data.append(optimizer.energy)\n",
    "\n",
    "energy_data.plot(baseline=E[0])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "quantax_env",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
